import{_ as i,c as s,o as a,a3 as l}from"./chunks/framework.ZQ2Ayaip.js";const n="/luyuxiang-blog/assets/image-9.DsarnURs.png",u=JSON.parse('{"title":"缺陷管理","description":"","frontmatter":{},"headers":[],"relativePath":"column/LargeFrontEnd2023/300_缺陷管理.md","filePath":"column/LargeFrontEnd2023/300_缺陷管理.md"}'),t={name:"column/LargeFrontEnd2023/300_缺陷管理.md"},e=l('<h1 id="缺陷管理" tabindex="-1">缺陷管理 <a class="header-anchor" href="#缺陷管理" aria-label="Permalink to &quot;缺陷管理&quot;">​</a></h1><p>动态的眼光看问题，长远的角度实施计划</p><p>做好 codeReview</p><p>缺陷管理不到位，常见的问题：</p><ol><li>这代码是人写的？</li><li>上班后项目垮了</li><li>加班到绝望（改bug）</li><li>项目黄了（项目达不到预期）</li></ol><p>缺陷控制在项目全生命周期旨在提高软件的质量</p><p><strong>导论：</strong></p><ul><li>缺陷控制概念及基本方法（方法论）</li><li>项目质量/进度管理工作流（扩展视野）</li><li>三类缺陷控制工具介绍（具体做法）</li></ul><p><strong>目标：</strong></p><ul><li>了解缺陷控制的概念</li><li>掌握缺陷控制的流程及控制方法</li><li>熟练使用缺陷控制的几类工具，提高效率</li></ul><h2 id="缺陷分类及结果" tabindex="-1">缺陷分类及结果 <a class="header-anchor" href="#缺陷分类及结果" aria-label="Permalink to &quot;缺陷分类及结果&quot;">​</a></h2><p><strong>软件开发</strong></p><ul><li>需求不明确 -&gt; 返工 <ol><li>需求经常变化</li><li>需求文档不清晰</li><li>客户未确定需求</li><li>内部反推动的工作风气</li><li>功能模块未讨论清楚，分工不具体，人员未指定。</li><li>...</li></ol></li><li>进度有超期 -&gt; 加班 <ol><li>经常项目上线加班</li><li>经常前期推不动，重度依赖U设计、产品经理</li><li>无人Push放风式管理</li><li>自驱力不足</li><li>...</li></ol></li><li>工程有Bug -&gt; 难维护 <ol><li>无代驾风格摸惠</li><li>无代码质量监测</li><li>测试流程紊乱</li><li>没有自动化测试闭环</li><li>发布环境/测试环境</li><li>...</li></ol></li><li>协同有问题 -&gt; 效率低下 <ol><li>项目经理太忙</li><li>项目经理经验不足</li><li>有想法的人太多</li><li>没有具体的分工</li><li>缺少协同工具，人员的协同能力不同</li></ol></li></ul><p><strong>解决办法</strong></p><ul><li><p>需求不明确 -&gt; 沟通/督办</p></li><li><p>进度有超期 -&gt; 缺陷跟踪</p></li><li><p>工程有Bug -&gt; 代码Lint/规范</p></li><li><p>协同有问题 -&gt; 清单/代办 （紧急代办、不紧急。。。4象限）</p></li><li><p>分工明确，责任到人</p></li><li><p>借助工具，提升效率</p></li><li><p>量体裁衣，按需取用</p></li></ul><h2 id="缺陷控制概念" tabindex="-1">缺陷控制概念 <a class="header-anchor" href="#缺陷控制概念" aria-label="Permalink to &quot;缺陷控制概念&quot;">​</a></h2><p>缺陷控制就是在项目全生命周期中，保障项目质量的一系列行为。</p><p>缺陷跟踪系统/软件是被设计用来帮助质量保证和程序员在工作中维护软件缺陷的跟踪报告，或者称作问题跟踪管理系统。</p><p>主要的作用是提供集中概览、开发状态、提供报告。</p><h2 id="案例分析" tabindex="-1">案例分析 <a class="header-anchor" href="#案例分析" aria-label="Permalink to &quot;案例分析&quot;">​</a></h2><ul><li>小公司团队/扁平管理/项目外包/业务多样简单</li><li>传统团队/二级公司/流程冗长/业务多样复杂</li><li>中大型公司/KPI驱动/技术单一/业务重复度高/技术深入</li></ul><p><strong>总结案例</strong></p><ul><li>无章办事/代码优化/代码质量</li><li>督办意识/工具看板/轻重缓急</li><li>意识薄弱/形同虚设/领导意识/团队意识</li></ul><p><strong>实施流程</strong></p><p><img src="'+n+`" alt="alt text" loading="lazy"></p><h2 id="缺陷管理工具" tabindex="-1">缺陷管理工具 <a class="header-anchor" href="#缺陷管理工具" aria-label="Permalink to &quot;缺陷管理工具&quot;">​</a></h2><ul><li>代码类：ESLint、JSLint、StyleLint...</li><li>流程类：Jira、禅道、 Redmine （bug的处理）</li><li>工具类：Trello（清单）、 Teambition（清单）、 钉钉、石墨</li></ul><p>简单的软件开发思路</p><ul><li>分析：功能模块-＞开源解决方案-＞业务闭环</li><li>资源配备：初步需求-＞产品经理+UI设计+程序员-＞开发系统</li><li>运营维护：公司级的运营-&gt;专门团队-&gt;运维</li></ul><h2 id="eslint-配置" tabindex="-1"><a href="https://zh-hans.eslint.org/" target="_blank">ESLint</a> 配置 <a class="header-anchor" href="#eslint-配置" aria-label="Permalink to &quot;&lt;a href=&quot;https://zh-hans.eslint.org/&quot; target=&quot;_blank&quot;&gt;ESLint&lt;/a&gt; 配置&quot;">​</a></h2><p>ESLint（JavaScript的可插入Linting工具）是用于识别和报告JavaScript代码中的模式和问题的工具。配置和使用ESLint有几个关键步骤，包括安装、初始化和自定义规则。以下是总结ESLint规则和配置的方法：</p><h3 id="_1-安装eslint" tabindex="-1">1. 安装ESLint <a class="header-anchor" href="#_1-安装eslint" aria-label="Permalink to &quot;1. 安装ESLint&quot;">​</a></h3><p>你可以通过npm或yarn安装ESLint：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eslint</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --save-dev</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># or</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eslint</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --dev</span></span></code></pre></div><h3 id="_2-初始化eslint配置" tabindex="-1">2. 初始化ESLint配置 <a class="header-anchor" href="#_2-初始化eslint配置" aria-label="Permalink to &quot;2. 初始化ESLint配置&quot;">​</a></h3><p>使用ESLint提供的初始化向导创建配置文件：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eslint</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --init</span></span></code></pre></div><p>这个命令会引导你完成一系列问题，例如：</p><ul><li>你想要检查什么类型的代码（JavaScript, React, Vue等）？</li><li>你是否使用TypeScript？</li><li>你想要使用哪种样式指南（如Airbnb, Google等）？</li><li>你是否希望在项目中使用Prettier来格式化代码？</li></ul><p>回答这些问题后，ESLint会生成一个配置文件（<code>.eslintrc.js</code>, <code>.eslintrc.json</code>或 <code>.eslintrc.yaml</code>）。</p><h3 id="_3-配置eslint规则" tabindex="-1">3. 配置ESLint规则 <a class="header-anchor" href="#_3-配置eslint规则" aria-label="Permalink to &quot;3. 配置ESLint规则&quot;">​</a></h3><p>ESLint配置文件允许你自定义规则。一个典型的 <code>.eslintrc.js</code> 文件如下所示：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;env&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;browser&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;es2021&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;extends&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;eslint:recommended&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;plugin:react/recommended&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ],</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;parserOptions&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;ecmaFeatures&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;jsx&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        },</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;ecmaVersion&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;sourceType&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;module&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;plugins&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;react&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ],</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;rules&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;indent&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;error&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;linebreak-style&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;error&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;unix&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;quotes&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;error&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;single&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;semi&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;error&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;always&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><h3 id="_4-使用预定义的规则集" tabindex="-1">4. 使用预定义的规则集 <a class="header-anchor" href="#_4-使用预定义的规则集" aria-label="Permalink to &quot;4. 使用预定义的规则集&quot;">​</a></h3><p>你可以扩展一些预定义的规则集，这些规则集通常包含了大量已经设置好的规则，例如：</p><ul><li><code>eslint:recommended</code>：ESLint推荐的一组规则。</li><li><code>airbnb</code>：Airbnb的JavaScript样式指南。</li><li><code>plugin:react/recommended</code>：React相关的推荐规则。</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;extends&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;eslint:recommended&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;airbnb&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;plugin:react/recommended&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><h3 id="_5-定制规则" tabindex="-1">5. 定制规则 <a class="header-anchor" href="#_5-定制规则" aria-label="Permalink to &quot;5. 定制规则&quot;">​</a></h3><p>在 <code>rules</code> 部分，你可以根据需要启用、禁用或修改规则：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;rules&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;indent&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;error&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 使用两个空格进行缩进</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;quotes&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;error&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;single&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 强制使用单引号</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;semi&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;error&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;always&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 强制使用分号</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;no-console&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;off&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 关闭对console语句的检查</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>每个规则可以设置为：</p><ul><li><code>&quot;off&quot;</code> 或 <code>0</code>：关闭规则</li><li><code>&quot;warn&quot;</code> 或 <code>1</code>：将规则作为警告（不会导致退出代码为1）</li><li><code>&quot;error&quot;</code> 或 <code>2</code>：将规则作为错误（退出代码为1）</li></ul><h3 id="_6-运行eslint" tabindex="-1">6. 运行ESLint <a class="header-anchor" href="#_6-运行eslint" aria-label="Permalink to &quot;6. 运行ESLint&quot;">​</a></h3><p>你可以通过命令行运行ESLint来检查你的代码：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eslint</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yourfile.js</span></span></code></pre></div><p>或者在整个项目中运行：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eslint</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span></code></pre></div><p>你也可以将ESLint集成到你的构建系统或编辑器中，以便在保存文件时自动检查代码。</p><h3 id="_7-配置文件位置" tabindex="-1">7. 配置文件位置 <a class="header-anchor" href="#_7-配置文件位置" aria-label="Permalink to &quot;7. 配置文件位置&quot;">​</a></h3><p>默认情况下，ESLint会在项目的根目录下查找配置文件。你可以使用以下几种格式来定义ESLint配置：</p><ul><li><code>.eslintrc.js</code></li><li><code>.eslintrc.json</code></li><li><code>.eslintrc.yaml</code></li><li>在 <code>package.json</code> 中的 <code>eslintConfig</code> 字段</li></ul><h3 id="_8-使用eslint插件" tabindex="-1">8. 使用ESLint插件 <a class="header-anchor" href="#_8-使用eslint插件" aria-label="Permalink to &quot;8. 使用ESLint插件&quot;">​</a></h3><p>ESLint插件允许你添加其他规则、解析器或环境支持。例如，使用React插件：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eslint-plugin-react</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --save-dev</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eslint-plugin-vue</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --save-dev</span></span></code></pre></div><p>在配置文件中添加插件：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;plugins&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;react&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div>`,66),h=[e];function p(k,o,r,d,E,g){return a(),s("div",null,h)}const F=i(t,[["render",p]]);export{u as __pageData,F as default};
